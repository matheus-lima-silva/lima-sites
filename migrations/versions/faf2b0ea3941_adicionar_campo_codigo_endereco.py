"""adicionar_campo_codigo_endereco

Revision ID: faf2b0ea3941
Revises: cd422b92930c
Create Date: 2025-04-25 18:21:31.417769

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision: str = 'faf2b0ea3941'
down_revision: Union[str, None] = 'cd422b92930c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    columns = [col['name'] for col in inspector.get_columns('enderecos')]
    
    # Adiciona a coluna apenas se ela ainda não existir
    if 'codigo_endereco' not in columns:
        op.add_column('enderecos', sa.Column('codigo_endereco', sa.String(), nullable=False, server_default='temp'))
        # Remover o server_default após a migração
        if conn.dialect.name != 'sqlite':  # SQLite não suporta ALTER COLUMN
            op.alter_column('enderecos', 'codigo_endereco', server_default=None)
    
    # Cria a constraint única apenas se a coluna for adicionada ou já existir
    try:
        op.create_unique_constraint('uq_enderecos_codigo_endereco', 'enderecos', ['codigo_endereco'])
    except Exception:
        # A constraint pode já existir ou não ser suportada pelo dialeto do banco
        pass
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        op.drop_constraint('uq_enderecos_codigo_endereco', 'enderecos', type_='unique')
    except Exception:
        pass
        
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    columns = [col['name'] for col in inspector.get_columns('enderecos')]
    
    if 'codigo_endereco' in columns:
        op.drop_column('enderecos', 'codigo_endereco')
    # ### end Alembic commands ###
